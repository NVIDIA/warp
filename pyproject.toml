[build-system]
requires = ["setuptools>=61", "build", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "warp-lang"
requires-python = ">=3.8" # 3.9 recommended
authors = [{ name = "NVIDIA Corporation", email = "mmacklin@nvidia.com" }]
description = "A Python framework for high-performance simulation and graphics programming"
license = { text = "NVIDIA Software License" }
classifiers = [
    "Programming Language :: Python :: 3.8",  # Deprecated
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
]
dependencies = ["numpy"]
dynamic = ["version", "readme"]

[project.urls]
GitHub = "https://github.com/NVIDIA/warp"
Documentation = "https://nvidia.github.io/warp"
Changelog = "https://github.com/NVIDIA/warp/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = ["pre-commit", "ruff", "nvtx", "nvidia-sphinx-theme", "sphinx-copybutton", "coverage[toml]"]
extras = ['usd-core', 'matplotlib', 'pyglet']

[tool.setuptools.packages.find]
include = ["warp*"]

[tool.setuptools.dynamic]
version = { file = ["VERSION.md"] }
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
indent-width = 4
extend-exclude = [
    "notebooks",
    "warp/native/cutlass/",
    "warp/thirdparty/appdirs.py",
    "warp/thirdparty/dlpack.py",
    "tools",
    "stubs.py",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "I",  # isort
    "F", # pyflakes
    "W",  # pycodestyle warnings
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "NPY",  # NumPy-specific rules
    "PLC",  # pylint convention
    "PLE",  # pylint error
    "PLW"  # pylint warning
]
ignore = [
    "E501", # Many lines are over 120 characters already
    "E741", # Warp often uses l as a variable name
    "F403", # Allow wildcard imports
    "F405", # Related to use of wildcard imports
    "F811", # Warp often uses overloads
    "E721", # Warp often uses == in float and int type comparisons
    "PLW0603" # Allow assignments to global variables
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"warp/tests/*.py" = ["F841"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.coverage.run]
source = ["warp", "warp.sim", "warp.render"]
disable_warnings = [
    "module-not-measured",
    "module-not-imported",
    "no-data-collected",
    "couldnt-parse",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@wp",
    "@warp",
    "if 0:",
    "if __name__ == .__main__.:",
]
omit = [
    "*/warp/thirdparty/*",
    "*/warp/examples/*",
    "*/warp/tests/*",
    "*/warp/fem/*",
    "appdirs.py",
    "render_opengl.py",
    "build_dll.py",
    "config.py",
    "stubs.py",
]
