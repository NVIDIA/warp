# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ==============================================================================
# Warp Kit Extensions Testing and Deployment Child Pipeline
# ==============================================================================

include:
  - /.gitlab/ci/common.yml
  - project: "omniverse/sectools/vault"
    file:
      - "templates/v3/common/token_job.gitlab-ci.yml"
      - "templates/v3/linux/codesign.gitlab-ci.yml"
      - "templates/v3/windows/codesign.gitlab-ci.yml"
      - "templates/v3/linux/packman_s3.gitlab-ci.yml"
      - "templates/v3/windows/packman_s3.gitlab-ci.yml"
      - "templates/v3/linux/nucleus/kit-extensions.ov.nvidia.com/kit-extension-svc.gitlab-ci.yml"
    ref: v1_latest

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"

stages:
  - test
  - package
  - deploy

check extensions public API:
  stage: test
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: linux-x86_64 build
  extends:
    - .omni_nvks_micro_runner
  before_script:
    - tools/packman/packman pull -p linux-x86_64 deps/kit-deps.packman.xml
  script:
    - tools/repo.sh checkapi

linux-x86_64 extension omni.warp.core test:
  stage: test
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: linux-x86_64 build
  image: 
    name: gitlab-master.nvidia.com:5005/omniverse/devplat/terraform/nvks/runners/gpu/nvks-gstreamer:2.1.5
    entrypoint: [""]
  extends:
    - .omni_nvks_gpu_570_test
  before_script:
    - tools/packman/packman pull -p linux-x86_64 deps/kit-deps.packman.xml
    - export TEST_KIT_EXT="omni.warp.core"
    - mv warp/bin/linux-x86_64/*.so warp/bin
  script:
    - !reference [.snippets, test-kit-ext-linux-x86_64]
  artifacts:
    name: $CI_JOB_NAME_SLUG
    paths:
      - "./_testoutput"
    expire_in: 1 week
    when: always

windows-x86_64 extension omni.warp.core test:
  stage: test
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: windows-x86_64 build
  before_script:
    - tools\packman\packman.cmd pull -p windows-x86_64 deps/kit-deps.packman.xml
    - $env:TEST_KIT_EXT = "omni.warp.core"
  script:
    - !reference [.snippets, test-kit-ext-windows-x86_64]
  artifacts:
    name: $CI_JOB_NAME_SLUG
    paths:
      - "./_testoutput"
    expire_in: 1 week
    when: always
  tags:
    - win-x86_64-gpu-1x-573.42

linux-x86_64 extension omni.warp test:
  stage: test
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: linux-x86_64 build
  image: 
    name: gitlab-master.nvidia.com:5005/omniverse/devplat/terraform/nvks/runners/gpu/nvks-gstreamer:2.1.5
    entrypoint: [""]
  extends:
    - .omni_nvks_gpu_570_test
  before_script:
    - tools/packman/packman pull -p linux-x86_64 deps/kit-deps.packman.xml
    - export TEST_KIT_EXT="omni.warp"
    - mv warp/bin/linux-x86_64/*.so warp/bin
  script:
    - !reference [.snippets, test-kit-ext-linux-x86_64]
  artifacts:
    name: $CI_JOB_NAME_SLUG
    paths:
      - "./_testoutput"
    expire_in: 1 week
    when: always

windows-x86_64 extension omni.warp test:
  stage: test
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: windows-x86_64 build
  before_script:
    - tools\packman\packman.cmd pull -p windows-x86_64 deps/kit-deps.packman.xml
    - $env:TEST_KIT_EXT = "omni.warp"
  script:
    - !reference [.snippets, test-kit-ext-windows-x86_64]
  artifacts:
    name: $CI_JOB_NAME_SLUG
    paths:
      - "./_testoutput"
    expire_in: 1 week
    when: always
  tags:
    - win-x86_64-gpu-1x-573.42

# ==============================================================================
# Packaging Jobs
# ==============================================================================

# Creates an artifact suitable for publishing the Kit extensions
create linux-aarch64 kit artifacts:
  stage: package
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: linux-aarch64 build
  extends:
    - .omni_nvks_micro_runner
  before_script:
    - apt-get update && apt-get install zip --no-install-recommends -y
    # Move compiled binaries out of platform-specific directory
    - mv warp/bin/linux-aarch64/*.so warp/bin/
    - rm -r warp/bin/linux-aarch64/
  script:
    - !reference [.snippets, prepare-kit-artifacts]
    - zip -r kit-extensions-linux-aarch64-$CI_COMMIT_SHORT_SHA.zip exts/
  artifacts:
    name: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    expose_as: "Kit Extensions linux-aarch64"
    paths:
      - kit-extensions-linux-aarch64-$CI_COMMIT_SHORT_SHA.zip

create linux-x86_64 kit artifacts:
  stage: package
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: linux-x86_64 build
  extends:
    - .omni_nvks_micro_runner
  before_script:
    - apt-get update && apt-get install zip --no-install-recommends -y
    # Move compiled binaries out of platform-specific directory
    - mv warp/bin/linux-x86_64/*.so warp/bin/
    - rm -r warp/bin/linux-x86_64/
  script:
    - !reference [.snippets, prepare-kit-artifacts]
    - zip -r kit-extensions-linux-x86_64-$CI_COMMIT_SHORT_SHA.zip exts/
  artifacts:
    name: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    expose_as: "Kit Extensions linux-x86_64"
    paths:
      - kit-extensions-linux-x86_64-$CI_COMMIT_SHORT_SHA.zip

create windows-x86_64 kit artifacts:
  stage: package
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: windows-x86_64 build
  extends:
    - .omni_nvks_micro_runner
  before_script:
    - apt-get update && apt-get install zip --no-install-recommends -y
  script:
    - !reference [.snippets, prepare-kit-artifacts]
    - zip -r kit-extensions-windows-x86_64-$CI_COMMIT_SHORT_SHA.zip exts/
  artifacts:
    name: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    expose_as: "Kit Extensions windows-x86_64"
    paths:
      - kit-extensions-windows-x86_64-$CI_COMMIT_SHORT_SHA.zip

# ==============================================================================
# Deployment Jobs
# ==============================================================================

# Uploads the extensions to packman.
publish extensions to packman:
  stage: deploy
  needs:
    - check extensions public API
    - create linux-aarch64 kit artifacts
    - create linux-x86_64 kit artifacts
    - create windows-x86_64 kit artifacts
  extends:
    - .omni_nvks_micro_runner
    - .osec:vault:v3:prod_token_job
  rules:
    - if: $CI_PROJECT_PATH != "omniverse/warp" # Prevent fork pipelines from running this job
      when: never
    - if: $PARENT_COMMIT_BRANCH =~ /release-.*/ || $PARENT_COMMIT_TAG
      when: manual
      allow_failure: true
  environment:
    name: Kit Extension Registry
    url: http://omniexts.nvidia.com/omni.warp
    deployment_tier: production
  before_script:
    - mkdir -p _build/linux-aarch64/release
    - unzip kit-extensions-linux-aarch64-$CI_COMMIT_SHORT_SHA.zip -d _build/linux-aarch64/release
    - mkdir -p _build/linux-x86_64/release
    - unzip kit-extensions-linux-x86_64-$CI_COMMIT_SHORT_SHA.zip -d _build/linux-x86_64/release
    - mkdir -p _build/windows-x86_64/release
    - unzip kit-extensions-windows-x86_64-$CI_COMMIT_SHORT_SHA.zip -d _build/windows-x86_64/release
    - tools/packman/packman pull -p linux-x86_64 deps/kit-deps.packman.xml
  script:
    - !reference [.osec:vault:v3:linux, codesign:perform_vault_requests]
    - !reference [.osec:vault:v3:linux, packman_s3:perform_vault_requests]
    - !reference [
        .osec:vault:v3:linux,
        nucleus:kit-extensions.ov.nvidia.com:kit-extension-svc:perform_vault_requests,
      ]
    - tools/repo.sh publish_exts --publish-all

# Uploads the extension artifacts to the internal GitLab package registry in the Warp project
# Generated files will be in a branch/tag-specific folder
publish to gitlab package registry:
  stage: deploy
  needs:
    - create linux-aarch64 kit artifacts
    - create linux-x86_64 kit artifacts
    - create windows-x86_64 kit artifacts
  extends:
    - .omni_nvks_micro_runner
  rules:
    - if: $PARENT_COMMIT_TAG
    - if: $PARENT_COMMIT_BRANCH =~ /release-.*/
    - when: manual # Can be triggered in all other scenarios
      allow_failure: true
  before_script:
    - apt-get update && apt-get install curl --no-install-recommends -y
  script:
    - |
      if [ -f kit-extensions-linux-aarch64-$CI_COMMIT_SHORT_SHA.zip ]; then
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file kit-extensions-linux-aarch64-$CI_COMMIT_SHORT_SHA.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/warp/${CI_COMMIT_REF_SLUG}/kit-extensions-linux-aarch64-${CI_COMMIT_SHORT_SHA}.zip"
      else
        echo "kit-extensions-linux-aarch64-$CI_COMMIT_SHORT_SHA.zip not found, skipping upload."
      fi
    - |
      if [ -f kit-extensions-linux-x86_64-$CI_COMMIT_SHORT_SHA.zip ]; then
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file kit-extensions-linux-x86_64-$CI_COMMIT_SHORT_SHA.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/warp/${CI_COMMIT_REF_SLUG}/kit-extensions-linux-x86_64-${CI_COMMIT_SHORT_SHA}.zip"
      else
        echo "kit-extensions-linux-x86_64-$CI_COMMIT_SHORT_SHA.zip not found, skipping upload."
      fi
    - |
      if [ -f kit-extensions-windows-x86_64-$CI_COMMIT_SHORT_SHA.zip ]; then
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file kit-extensions-windows-x86_64-$CI_COMMIT_SHORT_SHA.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/warp/${CI_COMMIT_REF_SLUG}/kit-extensions-windows-x86_64-${CI_COMMIT_SHORT_SHA}.zip"
      else
        echo "kit-extensions-windows-x86_64-$CI_COMMIT_SHORT_SHA.zip not found, skipping upload."
      fi
    - echo "See the published files at $CI_PROJECT_URL/-/packages"
