[package]
# Semantic Versioning is used: https://semver.org/
version = "1.6.0"
authors = ["NVIDIA"]
title = "Warp"
description="Warp OmniGraph Nodes and Sample Scenes"
readme  = "docs/README.md"
repository="https://github.com/nvidia/warp"
category = "graph"
keywords = ["kit", "omnigraph", "warp", "simulation"]
changelog="docs/CHANGELOG.md"
python.import_mode = "ParallelThread"

preview_image = "data/preview.png"
icon = "data/icon.png"

# Watch the .ogn files for hot reloading (only works for Python files)
[fswatcher.patterns]
include = ["*.ogn", "*.py"]
exclude = ["Ogn*Database.py", "*/ogn*"]

[dependencies]
"omni.graph" = {}
"omni.graph.action" = {}
"omni.graph.core" = {}
"omni.graph.nodes" = {}
"omni.graph.ui" = {optional=true}
"omni.graph.ui_nodes" = {}
"omni.kit.actions.core" = {}
"omni.kit.browser.sample" = {optional = true}
"omni.kit.menu.utils" = {optional = true}
"omni.kit.property.usd" = {optional = true}
"omni.kit.widget.searchfield" = {optional = true}
"omni.kit.widget.text_editor" = {optional = true}
"omni.kit.window.property" = {optional = true}
"omni.timeline" = {}
"omni.ui" = {optional = true}
"omni.usd" = {}
"omni.warp.core" = {version = "1.6.0", exact = true}
"usdrt.scenegraph" = {}

[settings]
exts."omni.warp".enable_backward = false
exts."omni.warp".enable_menu = true

[[python.module]]
name = "omni.warp._extension"

[[python.module]]
name = "omni.warp.nodes"

[[test]]
dependencies = [
    "omni.hydra.rtx",
    "omni.kit.test_helpers_gfx",
    "omni.kit.viewport.utility",

    # Additional dependencies that need to be enabled for the extensions above to work.
    "omni.kit.commands", # Required by `omni.kit.material.library`, `omni.kit.viewport.utility`, and `omni.kit.viewport.window`.
    "omni.kit.manipulator.selection", # Required by `omni.kit.viewport.window`.
    "omni.kit.material.library", # Required by `omni.kit.viewport.window`.
    "omni.kit.renderer.capture", # Required by `omni.kit.viewport.utility`.
    "omni.kit.viewport.window", # Required by `omni.kit.viewport.utility`.
    "omni.hydra.usdrt_delegate",
]

args = [
    "--/app/asyncRendering=false",
    "--/app/hydraEngine/waitIdle=true",
    "--/app/omni.warp/kernel_enable_opt_in=false",
    "--/app/renderer/resolution/height=360",
    "--/app/renderer/resolution/width=640",
    "--/app/updateOrder/checkForHydraRenderComplete=1000",
    "--/renderer/enabled=rtx",
    "--/renderer/active=rtx",
    "--/rtx/hydra/materialSyncLoads=true",
    "--/rtx/materialDb/syncLoads=true",
    "--/rtx-transient/post/aa/limitedOps=false",
    "--/rtx-transient/resourcemanager/texturestreaming/async=false",
    "--no-window",

    # Uncomment to update the golden images used for testing.
    # "--/exts/omni.warp/update_golden_images=true",
]

stdoutFailPatterns.exclude = [
    "*[Warning] [rtx.neuraylib.plugin] [MDLC:COMPILER]*",
]
